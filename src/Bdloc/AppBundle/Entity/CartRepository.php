<?php

namespace Bdloc\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartRepository extends EntityRepository
{

    public function findUserCurrentCart( $user ) {

        $query = $this->createQueryBuilder('c')
            ->where('c.user = :user')
            ->setParameter('user', $user)
            ->andWhere('c.status = :status')
            ->setParameter('status', 'en cours')
            ->getQuery();

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
            return null;
        }

    }

    public function findUserValidatedCarts( $user ) {

        $query = $this->createQueryBuilder('c')
            ->where('c.user = :user')
            ->setParameter('user', $user)
            ->andWhere('c.status = :status')
            ->setParameter('status', 'validÃ©')
            ->getQuery();

        return $query->getResult();
    }

    public function CountItemsNumberInCurrentCart( $id ) {
        // requete avec COUNT
    }

    public function findBooksInCurrentCart( $id ) {

        $qb = $this->createQueryBuilder('c')
            ->addSelect('c')
            ->where('c.id = :id')
            ->setParameter('id', $id)
            ->join('c.cartItems', 'ci')
            ->addSelect('ci')
            ->join('ci.book', 'b')
            ->addSelect('b')
            ->getQuery();

        try {
            return $qb->getSingleResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
            return null;
        }

    }



}
